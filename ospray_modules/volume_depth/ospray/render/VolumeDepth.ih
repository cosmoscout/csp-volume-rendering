// Copyright 2009-2020 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#pragma once

#include "common/World.ih"
#include "math/random.ih"
#include "render/Renderer.ih"

enum DepthMode {
  eNone           = 0,
  eIsosurface     = 1,
  eFirstHit       = 2,
  eLastHit        = 4,
  eThreshold      = 8,
  eMultiThreshold = 16
};

struct VolumeDepth {
  Renderer super;
  int      depthMode;
  bool     shadowsEnabled;
  int      aoSamples;
  float    aoRadius;
  float    volumeSamplingRate;
};

struct VolumeDepthRenderContext {
  const VolumeDepth* uniform renderer;
  const FrameBuffer* uniform fb;
  const World* uniform       world;
  ScreenSample               sample;
  varying LDSampler* uniform ldSampler;
};

struct LDSampler;

vec3f lightAlpha(const uniform VolumeDepth* uniform self, Ray& ray, const FrameBuffer* uniform fb,
    const World* uniform world, ScreenSample& sample, varying LDSampler* uniform ldSampler,
    vec3f weight, float rayOffset, uniform float quality);

vec3f VolumeDepth_computeAO(const uniform VolumeDepth* uniform self, const FrameBuffer* uniform fb,
    const World* uniform world, ScreenSample& sample, varying LDSampler* uniform ldSampler,
    const varying DifferentialGeometry& dg, const uniform int sampleCnt,
    const uniform float aoRadius, const varying vec3i& sampleID);
